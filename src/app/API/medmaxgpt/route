// src/app/api/medmaxgpt/route.js

export async function POST(req) {
  const { pergunta, resposta } = await req.json();

  // Proteja sua API Key! O ideal é usar variável de ambiente
  const apiKey = process.env.OPENAI_API_KEY;

  if (!apiKey) {
    return new Response(JSON.stringify({ error: "API key não configurada." }), { status: 500 });
  }

  const prompt = `
Você é um assistente para provas médicas. Um estudante respondeu uma questão. 
Explique detalhadamente para o estudante porque a alternativa escolhida está correta ou incorreta, e o raciocínio clínico/fisiopatológico por trás da resposta correta.

Pergunta: ${pergunta}
Resposta marcada: ${resposta}

Seja objetivo, mas didático.
  `.trim();

  const respostaIA = await fetch("https://api.openai.com/v1/chat/completions", {
    method: "POST",
    headers: {
      "Authorization": `Bearer ${apiKey}`,
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      model: "gpt-4o", // pode usar gpt-4o ou gpt-3.5-turbo
      messages: [
        { role: "system", content: "Você é um explicador de provas médicas para estudantes. Responda em português." },
        { role: "user", content: prompt }
      ],
      max_tokens: 600,
      temperature: 0.4
    })
  }).then(res => res.json());

  if (respostaIA.error) {
    return new Response(JSON.stringify({ error: respostaIA.error.message }), { status: 500 });
  }

  return new Response(JSON.stringify({ explicacao: respostaIA.choices[0].message.content }), { status: 200 });
}
